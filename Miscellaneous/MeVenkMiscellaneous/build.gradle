


plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
    id 'com.gradle.build-scan' version '1.16'
}


version = '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    
    
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
     
         // This dependency is exported to consumers, that is to say found on their compile classpath.
	    api 'org.apache.commons:commons-math3:3.6.1'
	
	    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
	    implementation 'com.google.guava:guava:26.0-jre'
	
	
	// https://mvnrepository.com/artifact/org.springframework/spring-core
		compile group: 'org.springframework', name: 'spring-core', version: '5.1.6.RELEASE'
    
   		// https://mvnrepository.com/artifact/org.springframework/spring-web
		compile group: 'org.springframework', name: 'spring-web', version: '5.1.6.RELEASE'
	
		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
		compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.1.4.RELEASE'
	
	    // Use JUnit test framework
	    testImplementation 'junit:junit:4.12'
}


jar {
    manifest {
        attributes 'Main-Class': 'org.mevenk.rest.async.SampleRestAsync'
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar - ' + project.name,  
        	'Implementation-Version': version,
        	'Main-Class': 'org.mevenk.rest.async.SampleRestAsync'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


